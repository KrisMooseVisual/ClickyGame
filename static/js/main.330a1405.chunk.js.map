{"version":3,"sources":["components/FighterCard/FighterCards.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FighterCards","props","id","name","onClick","fighters","className","alt","src","image","Wrapper","children","Title","App","state","score","message","newFighters","map","fighter","clicked","console","log","setState","this","alert","randomizeFighters","shuffled","array","i","length","j","Math","floor","random","randomFighters","key","Component","ReactDOM","render","document","getElementById"],"mappings":"+tCAkBeA,G,MAXM,SAAAC,GAAK,OACxB,yBACAC,GAAID,EAAME,KACVC,QAAS,kBAAMH,EAAMI,SAASJ,EAAMC,KAAKI,UAAU,iBACjD,yBAAKA,UAAU,iBACb,yBAAKC,IAAKN,EAAME,KAAMK,IAAKP,EAAMQ,Y,MCLxBC,MAJf,SAAiBT,GACf,OAAO,yBAAKK,UAAU,WAAWL,EAAMU,W,MCG1BC,MAJf,SAAeX,GACb,OAAO,wBAAIK,UAAU,SAASL,EAAMU,W,iBCwFvBE,E,2MAzEbC,MAAQ,CACNT,SAAUA,EACVU,MAAO,EACPC,QAAS,iG,EAGXX,SAAW,SAAAH,GACT,IAAMe,EAAc,EAAKH,MAAMT,SAASa,KAAI,SAAAC,GAY1C,OAXGA,EAAQjB,KAAOA,IACO,IAApBiB,EAAQC,UAETD,EAAQC,SAAU,GAQfD,KAGTE,QAAQC,IAAIL,GAEZ,EAAKM,SAAS,CACZlB,SAAUY,EACVF,MAAO,EAAKD,MAAMC,MAAQ,IACzB,WACES,KAAKV,MAAMC,MAAQ,IAEpBU,MAAM,eAIV,EAAKC,qB,EAYPA,kBAAoB,WAClB,IAAMC,EAzDV,SAAwBC,GACtB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADC,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,KAI3C,OAAOH,EAoDYO,CAAe9B,GAChC,EAAKkB,SAAS,CAAElB,SAAUsB,K,wEAGlB,IAAD,OACP,OACE,kBAAC,EAAD,KAEE,kBAAC,EAAD,qCACA,kBAAC,EAAD,KAAO,0CAAgBH,KAAKV,MAAMC,QACjCS,KAAKV,MAAMT,SAASa,KAAI,SAAAb,GAAQ,OAC/B,kBAAC,EAAD,CACEH,GAAIG,EAASH,GACbkC,IAAK/B,EAASH,GACdC,KAAME,EAASF,KACfM,MAAOJ,EAASI,MAChBiB,kBAAmB,EAAKA,kBACxBrB,SAAU,EAAKA,mB,GAlETgC,a,MCZlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.330a1405.chunk.js","sourcesContent":["/* eslint-disable react/jsx-no-duplicate-props */\n\nimport React from \"react\";\nimport \"./style.css\";\n\n\n\nconst FighterCards = props => (\n  <div \n  id={props.name}\n  onClick={() => props.fighters(props.id)} className=\"card col-md-3\">\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\n\nexport default FighterCards;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","/* eslint-disable no-undef */\nimport React, { Component } from \"react\";\nimport FighterCard from \"./components/FighterCard/FighterCards\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport fighters from \"./fighters.json\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction randomFighters(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nclass App extends Component {\n\n  state = {\n    fighters: fighters,\n    score: 0,\n    message: \"Click on your fighters to start but, don't click the same fighters more than once! Good luck!\"\n  };\n\n  fighters = id => {\n    const newFighters = this.state.fighters.map(fighter => {\n      if(fighter.id === id) {\n        if(fighter.clicked === false) {\n          // if it hasn't been clicked, set clicked to true\n          fighter.clicked = true;\n        } else {\n          // otherwise, this has been clicked already\n          // you lose the game! reset the game\n\n        }\n      }\n\n      return fighter;\n    });\n\n    console.log(newFighters);\n\n    this.setState({\n      fighters: newFighters,\n      score: this.state.score + 1\n    }, function() {\n      if(this.state.score > 11) {\n        // you win!! reset the game. otherwise keep playing\n        alert(\"YOu win!\");\n      }\n    });\n\n    this.randomizeFighters();\n    // if (!this.state.gameover) {\n    //   if (this.state.fighters(id) === -1) {\n    //     this.increment();\n    //     this.setState({ fighters: [...this.state.fighters, id] });\n    //   } else {\n    //     this.setState({ message: 'Game Over', gameover: true })\n    //     this.reset();\n    //   }\n    // }\n  }\n\n  randomizeFighters = () => {\n    const shuffled = randomFighters(fighters);\n    this.setState({ fighters: shuffled });\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        \n        <Title>Street Fighter II Click Game</Title>\n        <Title><h1>Your Score:{this.state.score}</h1></Title>\n        {this.state.fighters.map(fighters => (\n          <FighterCard\n            id={fighters.id}\n            key={fighters.id}\n            name={fighters.name}\n            image={fighters.image}\n            randomizeFighters={this.randomizeFighters}\n            fighters={this.fighters}\n            />\n        ))}\n      </Wrapper>\n    );\n  }\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}